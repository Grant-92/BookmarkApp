var RestController = function(collection)
{
    this.collection = collection;
}

RestController.prototype.handlePromise = function handlePromise(promise, response)
{
    return promise.then(success => response.send(success))
        .catch(error => response.status(500).send(error));
}

RestController.prototype.find = function find(request, response)
{
    var promise = this.collection.find();
    this.handlePromise(promise, response);
}

RestController.prototype.findById = function(request, response)
{
    var promise = this.collection.findById(request.params.id);
    this.handlePromise(promise, response);
}

RestController.prototype.create = function(request, response)
{
    var promise = this.collection.create(request.body);
    this.handlePromise(promise, response);
}

RestController.prototype.findByIdAndUpdate = function(request, response)
{
    var promise = this.collection.findByIdAndUpdate(request.params.id, request.body);
    this.handlePromise(promise, response);
}

RestController.prototype.findByIdAndDelete = function(request, response)
{
    var promise = this.collection.findByIdAndDelete(request.params.id);    
    this.handlePromise(promise, response);
}

RestController.prototype.getRoutePath = function getRoutePath(complement = "")
{
    return "/Api/" + this.collection.modelName + "/" + complement;
}

RestController.prototype.registerRouteCollection = function registerRouteCollection(application)
{
    application.get(this.getRoutePath(), this.find.bind(this));
    application.get(this.getRoutePath(":id"), this.findById.bind(this));
    application.post(this.getRoutePath(), this.create.bind(this));
    application.put(this.getRoutePath(":id"), this.findByIdAndUpdate.bind(this));
    application.delete(this.getRoutePath(":id"), this.findByIdAndDelete.bind(this));
}

module.exports = RestController;
